import{_ as s,c as e,o as t,ae as n}from"./chunks/framework.U1Gow_7P.js";const u=JSON.parse('{"title":"Using StateZero with Bolt.new","description":"","frontmatter":{},"headers":[],"relativePath":"bolt-new-quickstart.md","filePath":"bolt-new-quickstart.md"}'),i={name:"bolt-new-quickstart.md"};function l(o,a,p,r,h,d){return t(),e("div",null,a[0]||(a[0]=[n(`<h1 id="using-statezero-with-bolt-new" tabindex="-1">Using StateZero with Bolt.new <a class="header-anchor" href="#using-statezero-with-bolt-new" aria-label="Permalink to &quot;Using StateZero with Bolt.new&quot;">​</a></h1><p>Build full-stack web apps with AI in minutes! This guide shows you how to use StateZero with Bolt.new to create AI-generated frontends that connect to your Django backend with real-time data.</p><h2 id="what-you-ll-build" tabindex="-1">What You&#39;ll Build <a class="header-anchor" href="#what-you-ll-build" aria-label="Permalink to &quot;What You&#39;ll Build&quot;">​</a></h2><ul><li><strong>Django backend</strong> with StateZero (running locally)</li><li><strong>AI-generated frontend</strong> in Bolt.new that uses your Django models directly</li><li><strong>Real-time updates</strong> between your backend and Bolt.new frontend</li></ul><h2 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites&quot;">​</a></h2><ul><li>Python 3.8+ and Node.js 16+</li><li>Free <a href="https://neon.com" target="_blank" rel="noreferrer">Neon</a> account (PostgreSQL database)</li><li>Free <a href="https://pusher.com" target="_blank" rel="noreferrer">Pusher</a> account (real-time updates)</li></ul><h2 id="step-1-create-your-django-backend-5-minutes" tabindex="-1">Step 1: Create Your Django Backend (5 minutes) <a class="header-anchor" href="#step-1-create-your-django-backend-5-minutes" aria-label="Permalink to &quot;Step 1: Create Your Django Backend (5 minutes)&quot;">​</a></h2><h3 id="_1-1-get-your-credentials" tabindex="-1">1.1 Get Your Credentials <a class="header-anchor" href="#_1-1-get-your-credentials" aria-label="Permalink to &quot;1.1 Get Your Credentials&quot;">​</a></h3><p><strong>Neon Database:</strong></p><ol><li>Create a free account at <a href="https://neon.com" target="_blank" rel="noreferrer">neon.com</a></li><li>Create a new database</li><li>Copy your connection string from the dashboard</li></ol><p><strong>Pusher Real-time:</strong></p><ol><li>Create a free account at <a href="https://pusher.com" target="_blank" rel="noreferrer">pusher.com</a></li><li>Create a new Channels app</li><li>Note your App ID, Key, Secret, and Cluster</li></ol><h3 id="_1-2-create-backend-with-cookiecutter" tabindex="-1">1.2 Create Backend with Cookiecutter <a class="header-anchor" href="#_1-2-create-backend-with-cookiecutter" aria-label="Permalink to &quot;1.2 Create Backend with Cookiecutter&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cookiecutter</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cookiecutter</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/state-zero/cookiecutter-statezero-django</span></span></code></pre></div><p>Follow the prompts and enter your Neon and Pusher credentials when asked.</p><h3 id="_1-3-start-your-backend" tabindex="-1">1.3 Start Your Backend <a class="header-anchor" href="#_1-3-start-your-backend" aria-label="Permalink to &quot;1.3 Start Your Backend&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Navigate to your new project</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> your-project-name</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Install dependencies and set up database</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> requirements.txt</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> manage.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> makemigrations</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> manage.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> migrate</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Start Django server</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> manage.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> runserver</span></span></code></pre></div><p>Your backend is now running with a <code>Note</code> model ready to use!</p><h2 id="step-2-expose-your-backend-with-statezero-tunnel-2-minutes" tabindex="-1">Step 2: Expose Your Backend with StateZero Tunnel (2 minutes) <a class="header-anchor" href="#step-2-expose-your-backend-with-statezero-tunnel-2-minutes" aria-label="Permalink to &quot;Step 2: Expose Your Backend with StateZero Tunnel (2 minutes)&quot;">​</a></h2><p>Since Bolt.new runs in the cloud, it needs a public URL to access your local Django backend.</p><h3 id="_2-1-start-the-tunnel" tabindex="-1">2.1 Start the Tunnel <a class="header-anchor" href="#_2-1-start-the-tunnel" aria-label="Permalink to &quot;2.1 Start the Tunnel&quot;">​</a></h3><p>In a new terminal (keep Django running):</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @statezero/statezero-tunnel</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 8000</span></span></code></pre></div><p>You&#39;ll see output like:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>🚀 Starting tunnel...</span></span>
<span class="line"><span>🌐 Subdomain: myapp-1a2b3c.tunnels.statezero.dev</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Public URL:</span></span>
<span class="line"><span>https://myapp-1a2b3c.tunnels.statezero.dev ⟶ http://localhost:8000</span></span></code></pre></div><p><strong>Important:</strong> Keep this terminal open! Copy your tunnel URL (e.g., <code>https://myapp-1a2b3c.tunnels.statezero.dev</code>) - you&#39;ll need it in the next step.</p><h3 id="_2-2-add-tunnel-url-to-django-settings" tabindex="-1">2.2 Add Tunnel URL to Django Settings <a class="header-anchor" href="#_2-2-add-tunnel-url-to-django-settings" aria-label="Permalink to &quot;2.2 Add Tunnel URL to Django Settings&quot;">​</a></h3><p>Now add your specific tunnel URL to Django&#39;s <code>ALLOWED_HOSTS</code>. In your <code>settings.py</code>, update:</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ALLOWED_HOSTS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;localhost&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;127.0.0.1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;myapp-1a2b3c.tunnels.statezero.dev&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Replace with your actual tunnel subdomain</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><p>Restart your Django server after making this change:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> manage.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> runserver</span></span></code></pre></div><h2 id="step-3-open-the-bolt-new-starter-1-minute" tabindex="-1">Step 3: Open the Bolt.new Starter (1 minute) <a class="header-anchor" href="#step-3-open-the-bolt-new-starter-1-minute" aria-label="Permalink to &quot;Step 3: Open the Bolt.new Starter (1 minute)&quot;">​</a></h2><p>Click this link to open the StateZero Vue starter in Bolt.new:</p><p><strong><a href="https://bolt.new/~/github.com/state-zero/statezero-vue-bolt-starter" target="_blank" rel="noreferrer">https://bolt.new/~/github.com/state-zero/statezero-vue-bolt-starter</a></strong></p><p>This opens a pre-configured Vue project with StateZero already set up.</p><h2 id="step-4-connect-bolt-new-to-your-backend-2-minutes" tabindex="-1">Step 4: Connect Bolt.new to Your Backend (2 minutes) <a class="header-anchor" href="#step-4-connect-bolt-new-to-your-backend-2-minutes" aria-label="Permalink to &quot;Step 4: Connect Bolt.new to Your Backend (2 minutes)&quot;">​</a></h2><h3 id="_4-1-update-configuration" tabindex="-1">4.1 Update Configuration <a class="header-anchor" href="#_4-1-update-configuration" aria-label="Permalink to &quot;4.1 Update Configuration&quot;">​</a></h3><p>In Bolt.new, open <code>statezero.config.js</code> and update the <code>BASE_URL</code>:</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Replace this line:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> BASE_URL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;http://127.0.0.1:8000&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// With your tunnel URL:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> BASE_URL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;https://myapp-1a2b3c.tunnels.statezero.dev&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>Also update your Pusher credentials in the same file:</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pusher</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  clientOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    appKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;your_pusher_key&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Your actual Pusher key</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    cluster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;your_pusher_cluster&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Your actual Pusher cluster</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    forceTLS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    authEndpoint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`\${</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">BASE_URL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}/statezero/events/auth/\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span></code></pre></div><h3 id="_4-2-sync-your-models" tabindex="-1">4.2 Sync Your Models <a class="header-anchor" href="#_4-2-sync-your-models" aria-label="Permalink to &quot;4.2 Sync Your Models&quot;">​</a></h3><p>In Bolt.new&#39;s terminal, run:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> statezero</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sync</span></span></code></pre></div><p>Select your models (including the <code>Note</code> model) and hit enter. This generates TypeScript models that mirror your Django models.</p><h2 id="step-5-build-your-app-with-ai-5-minutes" tabindex="-1">Step 5: Build Your App with AI (5 minutes) <a class="header-anchor" href="#step-5-build-your-app-with-ai-5-minutes" aria-label="Permalink to &quot;Step 5: Build Your App with AI (5 minutes)&quot;">​</a></h2><p>Now you can ask Bolt.new to create your app! Copy and paste this prompt:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Create a modern notes app using the Note model from my Django backend. The app should have:</span></span>
<span class="line"><span></span></span>
<span class="line"><span>- A clean dashboard showing all notes in a card layout</span></span>
<span class="line"><span>- Create new notes with title and content fields</span></span>
<span class="line"><span>- Edit existing notes inline or in a modal</span></span>
<span class="line"><span>- Delete notes with confirmation</span></span>
<span class="line"><span>- Search and filter functionality</span></span>
<span class="line"><span>- Real-time updates (when someone adds/edits a note, it appears instantly for all users)</span></span>
<span class="line"><span>- Responsive design with CSS</span></span>
<span class="line"><span>- Loading states and smooth animations</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Refer to the README.md to see how to use the StateZero models. Make it feel like a premium note-taking app with good UX. Use standard css, don&#39;t use tailwind for css/styling.</span></span></code></pre></div><h2 id="step-6-watch-the-magic-✨" tabindex="-1">Step 6: Watch the Magic! ✨ <a class="header-anchor" href="#step-6-watch-the-magic-✨" aria-label="Permalink to &quot;Step 6: Watch the Magic! ✨&quot;">​</a></h2><p>As Bolt.new generates your frontend:</p><ol><li><strong>Real-time updates work automatically</strong> - Changes made in one browser tab appear instantly in others</li><li><strong>Django permissions are enforced</strong> - Your backend security rules apply to the frontend</li><li><strong>Full ORM power</strong> - Use complex filtering, relationships, and aggregations</li><li><strong>No API code needed</strong> - Bolt.dev uses your Django models directly</li></ol><h2 id="example-testing-real-time-updates" tabindex="-1">Example: Testing Real-time Updates <a class="header-anchor" href="#example-testing-real-time-updates" aria-label="Permalink to &quot;Example: Testing Real-time Updates&quot;">​</a></h2><ol><li>Open your Bolt.new app in two browser tabs</li><li>Create a new note in one tab</li><li>Watch it appear instantly in the other tab!</li></ol><p>You can also test from your Django admin:</p><ol><li>Go to <code>https://your-tunnel-url.tunnels.statezero.dev/admin</code></li><li>Add/edit notes through Django admin</li><li>See changes appear instantly in your Bolt.new frontend</li></ol><h2 id="important-file-upload-limitations" tabindex="-1">Important: File Upload Limitations <a class="header-anchor" href="#important-file-upload-limitations" aria-label="Permalink to &quot;Important: File Upload Limitations&quot;">​</a></h2><p><strong>StateZero Tunnel has a 40KB file size limit.</strong> Files larger than 40KB will fail to upload through the tunnel.</p><p>If your app needs file uploads during local development, configure Django storages to use a cloud provider like AWS S3, Cloudinary, or similar. This bypasses the tunnel limitation by uploading files directly to cloud storage.</p><h2 id="troubleshooting" tabindex="-1">Troubleshooting <a class="header-anchor" href="#troubleshooting" aria-label="Permalink to &quot;Troubleshooting&quot;">​</a></h2><p><strong>Bolt.new can&#39;t connect to backend:</strong></p><ul><li>Ensure your tunnel is still running (<code>npx @statezero/statezero-tunnel 8000</code>)</li><li>Check that <code>BASE_URL</code> in <code>statezero.config.js</code> matches your tunnel URL</li><li>Verify your Django server is running on port 8000</li></ul><p><strong>Models not syncing:</strong></p><ul><li>Make sure your Django backend is accessible via the tunnel URL</li><li>Check that models are properly registered in <code>crud.py</code></li><li>Try running <code>npx statezero sync</code> again</li></ul><p><strong>Real-time updates not working:</strong></p><ul><li>Verify Pusher credentials in both Django settings and <code>statezero.config.js</code></li><li>Check that your Pusher app is active and has remaining message quota</li></ul><h2 id="next-steps" tabindex="-1">Next Steps <a class="header-anchor" href="#next-steps" aria-label="Permalink to &quot;Next Steps&quot;">​</a></h2><p>Once you have your basic app working:</p><ol><li><strong>Add more models</strong> to your Django backend and sync them to Bolt.new</li><li><strong>Implement authentication</strong> using Django&#39;s built-in user system</li><li><strong>Deploy your backend</strong> to a service like Railway or Heroku</li><li><strong>Deploy your frontend</strong> from Bolt.new to Netlify or Vercel</li></ol><p>You now have a powerful workflow for building full-stack apps with AI! 🚀</p>`,69)]))}const k=s(i,[["render",l]]);export{u as __pageData,k as default};
